name: Build and Push Docker image  # 定义这个GitHub Actions工作流的名称

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发工作流
  pull_request:
    branches:
      - main  # 当有新的 pull request 提交到 main 分支时触发工作流

jobs:
  build_and_push:  # 定义一个名为 build_and_push 的 job
    runs-on: ubuntu-latest  # 指定工作流运行在最新版本的 Ubuntu 操作系统上
    steps:  # 定义这个 job 的步骤
    - name: Check out the repository  # 步骤名称：检出仓库代码
      uses: actions/checkout@v3  # 使用官方的 checkout action 将仓库代码检出到工作流运行环境中

    - name: Set up Docker Buildx  # 步骤名称：设置 Docker Buildx
      uses: docker/setup-buildx-action@v2  # 使用官方的 setup-buildx action 设置 Docker Buildx，这是一个用于多平台构建的工具

    - name: Log in to DockerHub  # 步骤名称：登录到 Docker Hub
      uses: docker/login-action@v2  # 使用官方的 login-action 登录 Docker Hub
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # 从 GitHub Secrets 中获取 Docker Hub 用户名
        password: ${{ secrets.DOCKER_PASSWORD }}  # 从 GitHub Secrets 中获取 Docker Hub 密码

    - name: Build and push  # 步骤名称：构建并推送镜像
      uses: docker/build-push-action@v3  # 使用官方的 build-push-action 构建并推送 Docker 镜像
      with:
        context: .  # 构建上下文为当前目录
        file: ./Dockerfile  # 指定 Dockerfile 文件的路径
        push: true  # 构建后自动推送镜像
        tags: weiqh/next-chat:latest  # 指定推送到 Docker Hub 的镜像标签，替换 yourusername/yourimagename 为实际的 Docker Hub 用户名和镜像名称

    - name: Run image  # 步骤名称：运行镜像
      run: |
        docker run weiqh/next-chat:latest  